{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/Web/seti/setitheme.com/components/Highlight.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport Prism from \"prismjs\";\n\nconst CodeEditor = props => {\n  const {\n    0: content,\n    1: setContent\n  } = useState(props.content);\n  useEffect(() => {\n    Prism.highlightAll();\n  }, [props.language, content]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"code-edit-container\",\n    children: /*#__PURE__*/_jsxDEV(\"pre\", {\n      className: \"code-output\",\n      children: /*#__PURE__*/_jsxDEV(\"code\", {\n        className: `language-${props.language}`,\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\nexport default CodeEditor;","map":{"version":3,"sources":["/Volumes/Web/seti/setitheme.com/components/Highlight.jsx"],"names":["React","useState","useEffect","Prism","CodeEditor","props","content","setContent","highlightAll","language"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAC1B,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBN,QAAQ,CAACI,KAAK,CAACC,OAAP,CAAtC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CAACK,YAAN;AACD,GAFQ,EAEN,CAACH,KAAK,CAACI,QAAP,EAAiBH,OAAjB,CAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACE;AAAM,QAAA,SAAS,EAAG,YAAWD,KAAK,CAACI,QAAS,EAA5C;AAAA,kBAAgDH;AAAhD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAdD;;AAgBA,eAAeF,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Prism from \"prismjs\";\n\nconst CodeEditor = props => {\n  const [content, setContent] = useState(props.content);\n\n  useEffect(() => {\n    Prism.highlightAll();\n  }, [props.language, content]);\n\n  return (\n    <div className=\"code-edit-container\">\n      <pre className=\"code-output\">\n        <code className={`language-${props.language}`}>{content}</code>\n      </pre>\n    </div>\n  );\n};\n\nexport default CodeEditor;"]},"metadata":{},"sourceType":"module"}