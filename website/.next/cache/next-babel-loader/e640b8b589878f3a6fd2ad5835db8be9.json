{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/Web/seti/setitheme.com/components/examples/Javascript.jsx\";\nimport Highlight from '../Highlight';\nexport default function Hero() {\n  const code = `\n\n    import Head from 'next/head';\n\n    import '../styles/index.scss'\n    // import Navigation from '../components/global/Navigation';\n\n    const title = 'Seti Theme';\n    let icon = '/favicon.ico';\n    \n    function App({ Component, pageProps }) {\n      return (\n        <section id=\"app\">\n          <Head>\n            <title>{title}</title>\n            <link rel=\"icon\" href={icon} />\n          </Head>\n          <Component {...pageProps} />\n        </section>\n      )\n    }\n    \n    export default App\n  \n\n\n    /*\n\n      COMMENTS\n      --------\n      CLASS: punctuation.definition.comment.js\n      TRIGGERS: js single line or comment blocks\n\n    */\n\n    class Bread {\n\n      constructor(slices) {\n        this.slices = 12;\n\n        if ( slices > this.slices ) {\n          console.log('not enough bread');\n        } else {\n          console.log(slices);\n        }\n\n      }\n\n    }\n\n    class Sandwich extends Bread {\n\n      constructor(slices) {\n        this.bread = super(slices);\n        this.toppings = [];\n      }\n\n      toppings( ingredients ) {\n        ingredients.forEach(function(value, index) {\n          this.toppings.push( value );\n        });\n      }\n\n    }\n\n    const Club = new Sandwich(3).toppings(['roast beef', 'turkey']);\n\n\n    /*\n\n      INTERPOLATED JS\n      --------\n      CLASS: punctuation.definition.comment.js\n      TRIGGERS: punctuation.section.embedded.js\n      NOTE: This class doesn't currently seem to actually get applied\n\n    */\n\n      const myName = 'Slim Shady',\n          template = 'Hello, my name is \\${myName}';\n\n    /*\n\n      FUNCTION PARAMS\n      --------\n      TRIGGER: ()           CLASS: meta.brace.round.js\n      TRIGGER: []           CLASS: meta.brace.square.js\n      TRIGGER: {}           CLASS: meta.brace.curly.js\n      TRIGGER: ,            CLASS: meta.object.delimiter.js\n      TRIGGER: =            CLASS: keyword.operator.js\n      TRIGGER: parameters   CLASS: constiable.parameter.function.js\n\n    */\n\n\n    function testFunction(string,arr,obj) {\n    // DO SOMETHING\n    }\n\n    testFunction('one', 'two', [1,2,3], {key: 'value'} );\n\n\n    /*\n\n      METHODS\n      --------\n      CLASS: meta.method.js\n\n      TRIGGER: break, case, catch, continue, do, else, export, finally, for, function, if, import, package, return, switch, throw, try, while, with\n\n    */\n\n    import { ham as turkey } from 'mySandwich.js';\n\n    const isFunction;\n\n    switch ( typeof testFunction ) {\n\n      case 'function':\n        isFunction = true;\n        break;\n      default:\n        isFunction = false;\n\n    }\n\n    try {\n      testFunction();\n    } catch (e) {\n      throw 'Whoopsadaisy!';\n    } finally {\n      console.log('i think we\\'re done here!');\n    }\n  `;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"code-sample\",\n    children: /*#__PURE__*/_jsxDEV(Highlight, {\n      language: \"javascript\",\n      content: code\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Volumes/Web/seti/setitheme.com/components/examples/Javascript.jsx"],"names":["Highlight","Hero","code"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,cAAtB;AAEA,eAAe,SAASC,IAAT,GAAgB;AAE7B,QAAMC,IAAI,GAAI;AAChrIE;AAsIA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,YAApB;AAAiC,MAAA,OAAO,EAAEA;AAA1C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD","sourcesContent":["import Highlight from '../Highlight';\n\nexport default function Hero() {\n\n  const code = `\n\n    import Head from 'next/head';\n\n    import '../styles/index.scss'\n    // import Navigation from '../components/global/Navigation';\n\n    const title = 'Seti Theme';\n    let icon = '/favicon.ico';\n    \n    function App({ Component, pageProps }) {\n      return (\n        <section id=\"app\">\n          <Head>\n            <title>{title}</title>\n            <link rel=\"icon\" href={icon} />\n          </Head>\n          <Component {...pageProps} />\n        </section>\n      )\n    }\n    \n    export default App\n  \n\n\n    /*\n\n      COMMENTS\n      --------\n      CLASS: punctuation.definition.comment.js\n      TRIGGERS: js single line or comment blocks\n\n    */\n\n    class Bread {\n\n      constructor(slices) {\n        this.slices = 12;\n\n        if ( slices > this.slices ) {\n          console.log('not enough bread');\n        } else {\n          console.log(slices);\n        }\n\n      }\n\n    }\n\n    class Sandwich extends Bread {\n\n      constructor(slices) {\n        this.bread = super(slices);\n        this.toppings = [];\n      }\n\n      toppings( ingredients ) {\n        ingredients.forEach(function(value, index) {\n          this.toppings.push( value );\n        });\n      }\n\n    }\n\n    const Club = new Sandwich(3).toppings(['roast beef', 'turkey']);\n\n\n    /*\n\n      INTERPOLATED JS\n      --------\n      CLASS: punctuation.definition.comment.js\n      TRIGGERS: punctuation.section.embedded.js\n      NOTE: This class doesn't currently seem to actually get applied\n\n    */\n\n      const myName = 'Slim Shady',\n          template = 'Hello, my name is \\${myName}';\n\n    /*\n\n      FUNCTION PARAMS\n      --------\n      TRIGGER: ()           CLASS: meta.brace.round.js\n      TRIGGER: []           CLASS: meta.brace.square.js\n      TRIGGER: {}           CLASS: meta.brace.curly.js\n      TRIGGER: ,            CLASS: meta.object.delimiter.js\n      TRIGGER: =            CLASS: keyword.operator.js\n      TRIGGER: parameters   CLASS: constiable.parameter.function.js\n\n    */\n\n\n    function testFunction(string,arr,obj) {\n    // DO SOMETHING\n    }\n\n    testFunction('one', 'two', [1,2,3], {key: 'value'} );\n\n\n    /*\n\n      METHODS\n      --------\n      CLASS: meta.method.js\n\n      TRIGGER: break, case, catch, continue, do, else, export, finally, for, function, if, import, package, return, switch, throw, try, while, with\n\n    */\n\n    import { ham as turkey } from 'mySandwich.js';\n\n    const isFunction;\n\n    switch ( typeof testFunction ) {\n\n      case 'function':\n        isFunction = true;\n        break;\n      default:\n        isFunction = false;\n\n    }\n\n    try {\n      testFunction();\n    } catch (e) {\n      throw 'Whoopsadaisy!';\n    } finally {\n      console.log('i think we\\'re done here!');\n    }\n  `;\n  return (\n    <div className=\"code-sample\"> \n      <Highlight language=\"javascript\" content={code} />\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}