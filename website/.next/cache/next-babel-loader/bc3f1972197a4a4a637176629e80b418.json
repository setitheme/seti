{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/Web/seti/setitheme.com/components/Highlight.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Prism from \"prismjs\";\n\nvar CodeEditor = function CodeEditor(props) {\n  _s();\n\n  var _useState = useState(props.content),\n      content = _useState[0],\n      setContent = _useState[1];\n\n  var handleKeyDown = function handleKeyDown(evt) {\n    var value = content,\n        selStartPos = evt.currentTarget.selectionStart;\n    console.log(evt.currentTarget); // handle 4-space indent on\n\n    if (evt.key === \"Tab\") {\n      value = value.substring(0, selStartPos) + \"    \" + value.substring(selStartPos, value.length);\n      evt.currentTarget.selectionStart = selStartPos + 3;\n      evt.currentTarget.selectionEnd = selStartPos + 4;\n      evt.preventDefault();\n      setContent(value);\n    }\n  };\n\n  useEffect(function () {\n    Prism.highlightAll();\n  }, [props.language, content]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"code-edit-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"code-input\",\n      value: content,\n      onChange: function onChange(evt) {\n        return setContent(evt.target.value);\n      },\n      onKeyDown: handleKeyDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      className: \"code-output\",\n      children: /*#__PURE__*/_jsxDEV(\"code\", {\n        className: \"language-\".concat(props.language),\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CodeEditor, \"EP9+P9jWrkWD3MCQURCiZjgsMjY=\");\n\n_c = CodeEditor;\nexport default CodeEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"sources":["/Volumes/Web/seti/setitheme.com/components/Highlight.jsx"],"names":["React","useState","useEffect","Prism","CodeEditor","props","content","setContent","handleKeyDown","evt","value","selStartPos","currentTarget","selectionStart","console","log","key","substring","length","selectionEnd","preventDefault","highlightAll","language","target"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK,EAAI;AAAA;;AAAA,kBACIJ,QAAQ,CAACI,KAAK,CAACC,OAAP,CADZ;AAAA,MACnBA,OADmB;AAAA,MACVC,UADU;;AAG1B,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,GAAG,EAAI;AAC3B,QAAIC,KAAK,GAAGJ,OAAZ;AAAA,QACEK,WAAW,GAAGF,GAAG,CAACG,aAAJ,CAAkBC,cADlC;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,GAAG,CAACG,aAAhB,EAJ2B,CAM3B;;AACA,QAAIH,GAAG,CAACO,GAAJ,KAAY,KAAhB,EAAuB;AACrBN,MAAAA,KAAK,GACHA,KAAK,CAACO,SAAN,CAAgB,CAAhB,EAAmBN,WAAnB,IACA,MADA,GAEAD,KAAK,CAACO,SAAN,CAAgBN,WAAhB,EAA6BD,KAAK,CAACQ,MAAnC,CAHF;AAIAT,MAAAA,GAAG,CAACG,aAAJ,CAAkBC,cAAlB,GAAmCF,WAAW,GAAG,CAAjD;AACAF,MAAAA,GAAG,CAACG,aAAJ,CAAkBO,YAAlB,GAAiCR,WAAW,GAAG,CAA/C;AACAF,MAAAA,GAAG,CAACW,cAAJ;AAEAb,MAAAA,UAAU,CAACG,KAAD,CAAV;AACD;AACF,GAlBD;;AAoBAR,EAAAA,SAAS,CAAC,YAAM;AACdC,IAAAA,KAAK,CAACkB,YAAN;AACD,GAFQ,EAEN,CAAChB,KAAK,CAACiB,QAAP,EAAiBhB,OAAjB,CAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,4BACE;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,KAAK,EAAEA,OAFT;AAGE,MAAA,QAAQ,EAAE,kBAAAG,GAAG;AAAA,eAAIF,UAAU,CAACE,GAAG,CAACc,MAAJ,CAAWb,KAAZ,CAAd;AAAA,OAHf;AAIE,MAAA,SAAS,EAAEF;AAJb;AAAA;AAAA;AAAA;AAAA,aADF,eAOE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACE;AAAM,QAAA,SAAS,qBAAcH,KAAK,CAACiB,QAApB,CAAf;AAAA,kBAAgDhB;AAAhD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aAPF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAaD,CAxCD;;GAAMF,U;;KAAAA,U;AA0CN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Prism from \"prismjs\";\n\nconst CodeEditor = props => {\n  const [content, setContent] = useState(props.content);\n\n  const handleKeyDown = evt => {\n    let value = content,\n      selStartPos = evt.currentTarget.selectionStart;\n\n    console.log(evt.currentTarget);\n\n    // handle 4-space indent on\n    if (evt.key === \"Tab\") {\n      value =\n        value.substring(0, selStartPos) +\n        \"    \" +\n        value.substring(selStartPos, value.length);\n      evt.currentTarget.selectionStart = selStartPos + 3;\n      evt.currentTarget.selectionEnd = selStartPos + 4;\n      evt.preventDefault();\n\n      setContent(value);\n    }\n  };\n\n  useEffect(() => {\n    Prism.highlightAll();\n  }, [props.language, content]);\n\n  return (\n    <div className=\"code-edit-container\">\n      <textarea\n        className=\"code-input\"\n        value={content}\n        onChange={evt => setContent(evt.target.value)}\n        onKeyDown={handleKeyDown}\n      />\n      <pre className=\"code-output\">\n        <code className={`language-${props.language}`}>{content}</code>\n      </pre>\n    </div>\n  );\n};\n\nexport default CodeEditor;"]},"metadata":{},"sourceType":"module"}